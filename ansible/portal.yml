---
# Copyright 2014(c) The Ontario Institute for Cancer Research. All rights reserved.

- name: Create the host file to be uploaded to instances
  hosts: localhost
  gather_facts: False
  tasks:
    - name: "Remove previous host file if exist"
      shell: rm -f portal_bootstrap_hosts
      delegate_to: localhost
    - name: "Remove previous debug file if exist"
      shell: rm -f portal_bootstrap_hosts_debug
      delegate_to: localhost
    - name: "Create new host file with localhost entry"
      shell: echo "127.0.0.1 localhost" > portal_bootstrap_hosts
      delegate_to: localhost

- name: Create OpenStack Instances
  hosts: portal-all
  user: root
  gather_facts: False
  serial: 1
  vars_files:
    - "vars/main.yml"
  tasks:
    - include: tasks/create-instances.yml
    - name: Add public ip to hostgroup
      # this hack allows adding each hostname to a group that will be used downstream. the regex strips "dcc-" from beginning
      # and potential "-xx" from the end of hostname and uses that as a group name, allowing us to use group names 
      # like portal-varnish or portal-01 in include statements. ex. dcc-portal-01 -> portal-01
      add_host: name={{ ip_data.public_ip }}
                groups={{ inventory_hostname | regex_replace('^dcc_(portal_[a-z]+)(_\d*$)?', '\\1') }},all_instances
                hostname={{ inventory_hostname }}
    - name: Writing private IPs to host file
      shell: echo "{{ creation_data.private_ip }} {{ inventory_hostname }}" >> portal_bootstrap_hosts
      delegate_to: localhost
    - name: Writing Debug info about hosts
      shell: echo "{{ inventory_hostname }} | {{ ip_data.public_ip }} | {{ creation_data.private_ip }} | {{ inventory_hostname | regex_replace('^dcc_(portal_[a-z]+)(_\d*$)?', '\\1') }}" >> portal_bootstrap_hosts_debug
      delegate_to: localhost

- name: Check if SSH is ready on servers
  hosts: all_instances
  gather_facts: False
  tasks:
    - name: Wait for ssh
      wait_for: host={{ inventory_hostname }}
                port=22
                timeout=900
      delegate_to: localhost

- name: Replace /etc/hosts with bootstrapped hosts file
  hosts: all_instances
  sudo: True
  serial: 1
  vars_files:
    - "vars/main.yml"
  vars:
    host_key_checking: False
    ansible_ssh_user: ubuntu
  tasks:
    - name: Copying... 
      copy: src=portal_bootstrap_hosts 
            dest=/etc/hosts
            owner=root
            group=root

- name: Configure and deploy varnish
  hosts: portal_varnish
  gather_facts: no
  user: ubuntu
  sudo: yes

  roles:
    - varnish

- name: Configure and deploy nginx
  hosts: portal_nginx
  gather_facts: no
  user: ubuntu
  sudo: yes

  roles:
    - nginx

- name: Configure and deploy portal
  hosts: portal_main
  gather_facts: no
  user: ubuntu
  sudo: yes

  roles:
    - portal

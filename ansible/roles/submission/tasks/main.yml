# Copyright 2015(c) The Ontario Institute for Cancer Research. All rights reserved.
#
# Description:
#   Install submission server

# Prepare the file system for installation
- name: Create file system
  file: "path={{ item }} state=directory"
  with_items:
    - "{{ install_dir }}"
    - "{{ data_dir }}"
    - "{{ staging_dir }}"

- name: Download the distribution
  get_url: url="{{ submission_server_dist_url }}"
            dest="{{ staging_dir }}/{{ submission_server_dist_filename }}"
            mode=0444

- name: Extract the dist 
  command: "tar xzf {{ staging_dir }}/{{ submission_server_dist_filename }} --strip 1 -C {{ install_dir }}" 

- name: Configure application
  template: src=application.yml.j2 
            dest="{{ conf_dir }}/application.yml"

- name: Download Shiro password utility
  get_url:  url="{{ shiro_url }}"
            dest="{{ staging_dir }}/password.jar"

- name: Generate password hash
  shell: "java -jar {{ staging_dir }}/password.jar -f shiro1 -a SHA-256 -i 500000 -gs '{{ admin_password }}'"
  register: password_hash
- set_fact: "admin_password_hash={{ password_hash.stdout }}"

- name: Install service
  command: "{{ bin_dir }}/dcc-submission-server install creates=/etc/init.d/dcc-submission-server"
  
- name: Ensure daemon is running
  service:  name=dcc-submission-server 
            state=started

################################################################################
# Bootstrap submission to have a release environment
################################################################################
- name: Make sure curl is there
  apt:  pkg=curl 
        state=installed

- name: Interpolate and copy script
  template: src=init.sh.j2 
            dest={{ bin_dir }}/init.sh 
            mode=0744

- name: Assign init command to variable
  set_fact: init_command="{{ bin_dir }}/init.sh {{ external_submission_url }} http://localhost:{{ http_port }} {{ webhdfs_url }} {{ admin_username }} {{ admin_password }} Release1 project1 Project1 Project1"
  
- name: Initialize the system
  shell: "{{ init_command }}"
  register: initLog

- debug: msg="{{ initLog.stdout }}"

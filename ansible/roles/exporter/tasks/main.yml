# Copyright 2015(c) The Ontario Institute for Cancer Research. All rights reserved.

- name: Clean copy
  file: path="{{ exporter_home }}"
        state=absent

- name: get exporter tarball from artifactory
  get_url:  url="{{ exporter_dist_url }}" 
            dest="{{ staging_dir }}/{{ exporter_dist_filename }}" 
            mode=644

- name: Extract dcc-exporter
  unarchive:  src="{{ staging_dir }}/{{ exporter_dist_filename }}"
              dest="{{ dcc_home }}"
              copy=no

- name: Update the symbolic link to the distribution
  file: path="{{ exporter_home }}"
        src="{{ dcc_home }}/{{ exporter_dist_fullname }}"
        state=link 
        force=yes

- name: Create directories
  file: path="{{ item }}" 
        state="directory" 
        owner="{{ dcc_user }}"
  with_items:
    - "{{ exporter_log }}"

# Patch configurations: FIXME: should be parameterized in overarch
- name: Patch zookeeper location
  lineinfile: dest="{{ exporter_home }}/scripts/pig/bucket.pig" 
              regexp="^set hbase.zookeeper.quorum" 
              line="set hbase.zookeeper.quorum '{{ hadoop_zookeeper_quorum }}'"

- name: Patch zookeeper location
  lineinfile: dest="{{ exporter_home }}/scripts/core.py" 
              regexp="hbase.zookeeper.quorum" 
              line="Pig.set('hbase.zookeeper.quorum', '{{ hadoop_zookeeper_quorum }}')"

- name: Patch download directory location
  lineinfile: dest="{{ exporter_home }}/scripts/core.py" 
              regexp="^root = \"/tmp/download\"" 
              line="root = \"{{ download_home_path }}\""

# Patch environment: FIXME: should probably be parameterized by overarch
- name: Patch setenv
  lineinfile: dest="{{ exporter_home }}/bin/setenv.sh" 
              regexp="^export HBASE_CONF_DIR" 
              line="export HBASE_CONF_DIR=/etc/hbase/conf"

- name: Patch downloader user
  lineinfile: dest="{{ exporter_home }}/bin/setenv.sh" 
              regexp="^JOB_USER=downloader" 
              line="JOB_USER=hdfs"

# https://github.com/ansible/ansible/issues/548
- name: Make sure dcc_dev owns everything
  file: path="{{ dcc_home }}" 
        owner={{ dcc_user }}
        recurse=yes

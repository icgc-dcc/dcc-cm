# HTTP
http:
  port: 6381
  adminPort: 6382
  rootPath: "/api/*"

# Database
database:
  # the name of your JDBC driver
  driverClass: org.postgresql.Driver

  # the username
  user: dcc

  # the password
  password: dcc
  
  # the JDBC URL
  url: {{ identifier_url }}
  
  # any properties specific to your JDBC driver:
  properties:
    charSet: UTF-8

  # the maximum amount of time to wait on an empty pool before throwing an exception
  maxWaitForConnection: 1s

  # the SQL query to run when validating a connection's liveness
  validationQuery: "/* MyService Health Check */ SELECT 1"

  # the minimum number of connections to keep open
  minSize: 8

  # the maximum number of connections to keep open
  maxSize: 32

  # whether or not idle connections should be validated
  checkConnectionWhileIdle: false

  # how long a connection must be held before it can be validated
  checkConnectionHealthWhenIdleFor: 10s

  # the maximum lifetime of an idle connection
  closeConnectionIfIdleFor: 1 minute    
  
# Logging settings
logging:

  # Settings for logging to stdout.
  console:

    # If true, write log statements to stdout.
    enabled: true

  # Settings for logging to a file.
  file:

    # If true, write log statements to a file.
    enabled: false

    # Do not write log statements below this threshold to the file.
    threshold: INFO

    # The file to which current statements will be logged.
    currentLogFilename: ../logs/dcc-identifier.log

    # When the log file rotates, the archived log will be renamed to this and gzipped. The
    # %d is replaced with the previous day (yyyy-MM-dd). Custom rolling windows can be created
    # by passing a SimpleDateFormat-compatible format as an argument: "%d{yyyy-MM-dd-hh}".
    archivedLogFilenamePattern: ../logs/dcc-identifier-%d.log.gz

    # The number of archived files to keep.
    archivedFileCount: 10

  # The default level of all loggers. Can be OFF, ERROR, WARN, INFO, DEBUG, TRACE, or ALL
  level: INFO

  # Logger-specific levels
  loggers:

    # Very chatty
    "com.wordnik.swagger.jsonschema.ApiModelParser": WARN
    #"com.sun.jersey.api.container.filter.LoggingFilter": WARN
    
    # ERRORs should be converted to WARNs in Swagger 1.2.2
    "com.wordnik.swagger.jaxrs.HelpApi": OFF
